fn do_stuff() {
    try {
        (fn() {
            for j in range(1,3) {
                if j == 3 {
                    throw format("err: j: {}", j);
                }
                while true {
                    try {
                        for i in range(0,10) {
                            if i == 5 {
                                throw format("err: i: {}", i);
                            } else {
                                printf("i: {}", i);
                            }
                        }
                    } catch err {
                        printf("caught: {}", err);
                    } finally {
                        printf("finally: j: {}", j);
                        break;
                    }
                }
            }
        })();
        return "WILL NOT see (try)";
    } catch err2 {
        printf("caught outer: {}", err2);
        return "WILL NOT see (catch)";
    } finally {
        return "WILL see (finally)";
    }
}

printf("do_stuff(): {}", do_stuff());